{"timestamp":"2025-06-01T04:47:24.109364","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-01T04:47:24.109910","level":"info","event":"Filling up the DagBag from /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/airflow/dags/daily_nasa_neo_etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-01T04:47:25.132707","level":"info","event":"Creating MinIO client for endpoint: localhost:9000","logger":"src.minio_client"}
{"timestamp":"2025-06-01T04:47:25.133013","level":"info","event":"Validating MinIO connection...","logger":"src.minio_client"}
{"timestamp":"2025-06-01T04:47:25.136152","level":"info","event":"MinIO connection validated successfully","logger":"src.minio_client"}
{"timestamp":"2025-06-01T04:47:25.161239","level":"info","event":"Input Notebook:  /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/notebooks/NeoApiClient.ipynb","logger":"papermill"}
{"timestamp":"2025-06-01T04:47:25.161349","level":"info","event":"Output Notebook: /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/notebooks/tmp/bronze/2025-05-31 23:47:25/2025-05-22_2025-05-28-OUT_NeoApiClient.ipynb","logger":"papermill"}
{"timestamp":"2025-06-01T04:47:26.556158","level":"info","event":"Executing notebook with kernel: nasa_spark_kernel","logger":"papermill"}
{"timestamp":"2025-06-01T04:47:28.933460","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019729d0-de61-7b9a-881a-77fd7e873d22'), task_id='Ingest_NASA_NEO_API_data.date_range-2025-05-22_2025-05-28', dag_id='NeoAPIPipeline', run_id='manual__2025-06-01T04:47:23.721584+00:00', try_number=1, map_index=-1, hostname='newlife', context_carrier=None, task=<Task(PapermillOperator): Ingest_NASA_NEO_API_data.date_range-2025-05-22_2025-05-28>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 6, 1, 4, 47, 23, 929447, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
