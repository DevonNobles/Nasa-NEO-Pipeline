{"timestamp":"2025-05-31T21:48:15.150627","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T21:48:15.152725","level":"info","event":"Filling up the DagBag from /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/airflow/dags/daily_nasa_neo_etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T21:48:16.754780","level":"info","event":"Creating MinIO client for endpoint: localhost:9000","logger":"src.minio_client"}
{"timestamp":"2025-05-31T21:48:16.755305","level":"info","event":"Validating MinIO connection...","logger":"src.minio_client"}
{"timestamp":"2025-05-31T21:48:16.762269","level":"info","event":"MinIO connection validated successfully","logger":"src.minio_client"}
{"timestamp":"2025-05-31T21:48:16.821507","level":"info","event":"Input Notebook:  /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/notebooks/NeoApiClient.ipynb","logger":"papermill"}
{"timestamp":"2025-05-31T21:48:16.821653","level":"info","event":"Output Notebook: /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/notebooks/tmp/bronze/2025-05-31 16:48:16/2025-01-08_2025-01-14-OUT_NeoApiClient.ipynb","logger":"papermill"}
{"timestamp":"2025-05-31T21:48:18.794526","level":"info","event":"Executing notebook with kernel: nasa_spark_kernel","logger":"papermill"}
{"timestamp":"2025-05-31T21:48:20.579395","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01972850-3ac4-7a7a-bd02-7b3829bd97bf'), task_id='Ingest_NASA_NEO_API_data.date_range-2025-01-08_2025-01-14', dag_id='NeoAPIPipeline', run_id='manual__2025-05-31T21:47:15.956554+00:00', try_number=1, map_index=-1, hostname='newlife', context_carrier=None, task=<Task(PapermillOperator): Ingest_NASA_NEO_API_data.date_range-2025-01-08_2025-01-14>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 5, 31, 21, 48, 14, 575302, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
