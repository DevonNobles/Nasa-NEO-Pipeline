{"timestamp":"2025-06-01T14:15:44.769942","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-01T14:15:44.771066","level":"info","event":"Filling up the DagBag from /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/airflow/dags/daily_nasa_neo_etl_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-01T14:15:46.003153","level":"info","event":"Creating MinIO client for endpoint: localhost:9000","logger":"src.minio_client"}
{"timestamp":"2025-06-01T14:15:46.003450","level":"info","event":"Validating MinIO connection...","logger":"src.minio_client"}
{"timestamp":"2025-06-01T14:15:46.006569","level":"info","event":"MinIO connection validated successfully","logger":"src.minio_client"}
{"timestamp":"2025-06-01T14:15:46.030166","level":"info","event":"Input Notebook:  /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/notebooks/NeoApiClient.ipynb","logger":"papermill"}
{"timestamp":"2025-06-01T14:15:46.030257","level":"info","event":"Output Notebook: /home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/notebooks/tmp/bronze/2025-06-01T14:15:27.518000+00:00/2025-05-01_2025-05-07-NeoApiClient.ipynb","logger":"papermill"}
{"timestamp":"2025-06-01T14:15:47.509446","level":"info","event":"Executing notebook with kernel: nasa_spark_kernel","logger":"papermill"}
{"timestamp":"2025-06-01T14:15:55.104999","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"PapermillExecutionError","exc_value":"\n---------------------------------------------------------------------------\nException encountered at \"In [8]\":\n---------------------------------------------------------------------------\nTimeoutError                              Traceback (most recent call last)\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py:534, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)\n    533 try:\n--> 534     response = conn.getresponse()\n    535 except (BaseSSLError, OSError) as e:\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/connection.py:516, in HTTPConnection.getresponse(self)\n    515 # Get the response from http.client.HTTPConnection\n--> 516 httplib_response = super().getresponse()\n    518 try:\n\nFile /usr/lib/python3.12/http/client.py:1428, in HTTPConnection.getresponse(self)\n   1427 try:\n-> 1428     response.begin()\n   1429 except ConnectionError:\n\nFile /usr/lib/python3.12/http/client.py:331, in HTTPResponse.begin(self)\n    330 while True:\n--> 331     version, status, reason = self._read_status()\n    332     if status != CONTINUE:\n\nFile /usr/lib/python3.12/http/client.py:292, in HTTPResponse._read_status(self)\n    291 def _read_status(self):\n--> 292     line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n    293     if len(line) > _MAXLINE:\n\nFile /usr/lib/python3.12/socket.py:707, in SocketIO.readinto(self, b)\n    706 try:\n--> 707     return self._sock.recv_into(b)\n    708 except timeout:\n\nFile /usr/lib/python3.12/ssl.py:1252, in SSLSocket.recv_into(self, buffer, nbytes, flags)\n   1249         raise ValueError(\n   1250           \"non-zero flags not allowed in calls to recv_into() on %s\" %\n   1251           self.__class__)\n-> 1252     return self.read(nbytes, buffer)\n   1253 else:\n\nFile /usr/lib/python3.12/ssl.py:1104, in SSLSocket.read(self, len, buffer)\n   1103 if buffer is not None:\n-> 1104     return self._sslobj.read(len, buffer)\n   1105 else:\n\nTimeoutError: The read operation timed out\n\nThe above exception was the direct cause of the following exception:\n\nReadTimeoutError                          Traceback (most recent call last)\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/requests/adapters.py:667, in HTTPAdapter.send(self, request, stream, timeout, verify, cert, proxies)\n    666 try:\n--> 667     resp = conn.urlopen(\n    668         method=request.method,\n    669         url=url,\n    670         body=request.body,\n    671         headers=request.headers,\n    672         redirect=False,\n    673         assert_same_host=False,\n    674         preload_content=False,\n    675         decode_content=False,\n    676         retries=self.max_retries,\n    677         timeout=timeout,\n    678         chunked=chunked,\n    679     )\n    681 except (ProtocolError, OSError) as err:\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)\n    839     new_e = ProtocolError(\"Connection aborted.\", new_e)\n--> 841 retries = retries.increment(\n    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]\n    843 )\n    844 retries.sleep()\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/util/retry.py:474, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)\n    473 if read is False or method is None or not self._is_method_retryable(method):\n--> 474     raise reraise(type(error), error, _stacktrace)\n    475 elif read is not None:\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/util/util.py:39, in reraise(tp, value, tb)\n     38         raise value.with_traceback(tb)\n---> 39     raise value\n     40 finally:\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)\n    786 # Make the request on the HTTPConnection object\n--> 787 response = self._make_request(\n    788     conn,\n    789     method,\n    790     url,\n    791     timeout=timeout_obj,\n    792     body=body,\n    793     headers=headers,\n    794     chunked=chunked,\n    795     retries=retries,\n    796     response_conn=response_conn,\n    797     preload_content=preload_content,\n    798     decode_content=decode_content,\n    799     **response_kw,\n    800 )\n    802 # Everything went great!\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py:536, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)\n    535 except (BaseSSLError, OSError) as e:\n--> 536     self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n    537     raise\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py:367, in HTTPConnectionPool._raise_timeout(self, err, url, timeout_value)\n    366 if isinstance(err, SocketTimeout):\n--> 367     raise ReadTimeoutError(\n    368         self, url, f\"Read timed out. (read timeout={timeout_value})\"\n    369     ) from err\n    371 # See the above comment about EAGAIN in Python 3.\n\nReadTimeoutError: HTTPSConnectionPool(host='api.nasa.gov', port=443): Read timed out. (read timeout=5)\n\nDuring handling of the above exception, another exception occurred:\n\nReadTimeout                               Traceback (most recent call last)\nCell In[7], line 318, in NeoApiClient._extract_from_api(self)\n    316 logger.debug(f\"Making API request to: {full_uri}\")\n--> 318 response = requests.get(full_uri, timeout=5)\n    319 response.raise_for_status()  # Raises HTTPError for bad responses\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/requests/api.py:73, in get(url, params, **kwargs)\n     63 r\"\"\"Sends a GET request.\n     64 \n     65 :param url: URL for the new :class:`Request` object.\n   (...)     70 :rtype: requests.Response\n     71 \"\"\"\n---> 73 return request(\"get\", url, params=params, **kwargs)\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/requests/api.py:59, in request(method, url, **kwargs)\n     58 with sessions.Session() as session:\n---> 59     return session.request(method=method, url=url, **kwargs)\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/requests/sessions.py:589, in Session.request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\n    588 send_kwargs.update(settings)\n--> 589 resp = self.send(prep, **send_kwargs)\n    591 return resp\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/requests/sessions.py:703, in Session.send(self, request, **kwargs)\n    702 # Send the request\n--> 703 r = adapter.send(request, **kwargs)\n    705 # Total elapsed time of the request (approximately)\n\nFile ~/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/requests/adapters.py:713, in HTTPAdapter.send(self, request, stream, timeout, verify, cert, proxies)\n    712 elif isinstance(e, ReadTimeoutError):\n--> 713     raise ReadTimeout(e, request=request)\n    714 elif isinstance(e, _InvalidHeader):\n\nReadTimeout: HTTPSConnectionPool(host='api.nasa.gov', port=443): Read timed out. (read timeout=5)\n\nDuring handling of the above exception, another exception occurred:\n\nDataExtractionError                       Traceback (most recent call last)\nCell In[8], line 11\n      2 neo_client = NeoApiClient(api_key=api_key_param,\n      3                           api_uri=api_uri_param,\n      4                           start_date=start_date_param, \n   (...)      7                           bucket_name=bucket_name_param, \n      8                           mode=mode)\n     10 # Execute ETL pipeline task based on mode\n---> 11 neo_client.extract().transform().load()\n\nCell In[7], line 295, in NeoApiClient.extract(self)\n    293 match self.mode:\n    294     case 'bronze':    # Extract from source: NASA NEO API request \n--> 295         self._extract_from_api()\n    297     case 'silver':    # Extract from source: neo/bronze/ \n    298         self._extract_from_bronze_storage()\n\nCell In[7], line 329, in NeoApiClient._extract_from_api(self)\n    326     logger.info(f\"Successfully extracted {len(json_bytes)} bytes from NASA API\")\n    328 except requests.exceptions.Timeout:\n--> 329     raise DataExtractionError(f\"API request timed out\")\n    330 except requests.exceptions.ConnectionError:\n    331     raise DataExtractionError(\"Failed to connect to NASA API - check network connection\")\n\nDataExtractionError: API request timed out\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":838,"name":"run"},{"filename":"/home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1130,"name":"_execute_task"},{"filename":"/home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/airflow/providers/papermill/operators/papermill.py","lineno":132,"name":"execute"},{"filename":"/home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/papermill/execute.py","lineno":131,"name":"execute_notebook"},{"filename":"/home/fastnnefarious/Projects/PycharmProjects/nasa_neo_pipeline/.venv/lib/python3.12/site-packages/papermill/execute.py","lineno":251,"name":"raise_for_execution_errors"}]}]}
